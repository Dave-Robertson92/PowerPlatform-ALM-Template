name: $(version.MajorMinor).$(version.Revision)
variables:
  system_accesstoken: $(System.AccessToken)
  version.MajorMinor: 3.0.0
  version.Revision: $[counter(variables['version.MajorMinor'], 0)]
trigger: none

parameters:
- name: Solutions
  displayName: List of solutions to export and unpack
  type: object
  default: 

pool:
  vmImage: windows-2019
steps:
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
     write-host $(Build.SourceBranchName)
     $sourceBranch ="$(Build.SourceBranchName)"
     $masterBranch = "master"

     If ($sourceBranch  -eq $masterBranch  ) 
      {
        throw "this pipeline should not be run on master"
      }
- task: PowerPlatformToolInstaller@0
  inputs:
    DefaultVersion: true
- ${{ each solution in parameters.Solutions }}: 
  
   - task: PowerPlatformExportSolution@0 
     inputs:
       authenticationType: 'PowerPlatformSPN'
       PowerPlatformSPN: ''
       SolutionName: ${{ solution }}
       SolutionOutputFile: '$(build.artifactstagingdirectory)/${{ solution }}.zip'
       AsyncOperation: true
       MaxAsyncWaitTime: '60'
       Managed: false
   - task: PowerPlatformExportSolution@0 
     inputs:
       authenticationType: 'PowerPlatformSPN'
       PowerPlatformSPN: ''
       SolutionName: ${{ solution }}
       SolutionOutputFile: '$(build.artifactstagingdirectory)/${{ solution }}_managed.zip'
       AsyncOperation: true
       MaxAsyncWaitTime: '60'
       Managed: true
  
   - task: PowerPlatformUnpackSolution@0
     inputs:
       SolutionInputFile: '$(build.artifactstagingdirectory)/${{ solution }}.zip'
       SolutionTargetFolder: '$(build.SourcesDirectory)Solutions/${{ solution }}'
       SolutionType: Both
- task: CmdLine@2
  inputs:
    script: |
      echo commit all changes
      git checkout $(Build.SourceBranchName)
      git config --global user.email "$(Build.QueuedBy)"
      git config --global user.name "$(Build.QueuedBy)"
      git add --all
      git commit -m "solution updates"
      echo push code to new repo
      git -c http.extraheader="AUTHORIZATION: bearer $(System.AccessToken)" push origin
  
